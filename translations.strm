get = {
    case [], _ -> nil
    case [x, *y], 0 -> x
    case [x, *y], n -> get(y, n - 1)
}

getName = (x, language) -> {

	if (language == "en") {
		index = 0
	} else if (language == "pl") {
		index = 1
	} else if (language == "fr") {
		index = 2
	} else if (language == "de") {
		index = 3
	} else {
		""
	}
	
	get(x, index)
}

hasName = (x, english) -> { getName(x, "en") == english }
translationsCsv = csv()
["string,string,string,string"] | translationsCsv
stream = fread("translations.csv") | translationsCsv

translate = (english, language) -> {
	thisFilter = filter{ x -> hasName(x, english) }
	translateThis = { x -> getName(x, language) }
	translationsCsv | thisFilter | translateThis
}

name = "lawn rake"
translate(name, "fr") | map { x -> "ğŸ‡«ğŸ‡· " + x } | stdout
# Output: ğŸ‡«ğŸ‡· RÃ¢teau Ã  gazon
